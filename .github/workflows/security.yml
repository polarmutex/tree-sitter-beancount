name: Security

on:
  schedule:
    # Run security scans every day at 02:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - Cargo.toml
      - Cargo.lock
      - package.json
      - package-lock.json

permissions:
  contents: read
  security-events: write

jobs:
  cargo-audit:
    name: Cargo audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run cargo audit
        run: cargo audit --json | tee audit-results.json

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cargo-audit-results
          path: audit-results.json
          retention-days: 30

  npm-audit:
    name: NPM audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json | tee npm-audit-results.json || true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-results
          path: npm-audit-results.json
          retention-days: 30

  codeql:
    name: CodeQL analysis
    runs-on: ubuntu-latest
    if: github.repository_owner == 'polarmutex'
    strategy:
      fail-fast: false
      matrix:
        language: ['cpp', 'javascript']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Set up tree-sitter
        uses: tree-sitter/setup-action/cli@v2

      - name: Build parser
        run: tree-sitter generate

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  secret-scan:
    name: Secret scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  security-summary:
    name: Security summary
    runs-on: ubuntu-latest
    needs: [cargo-audit, npm-audit, secret-scan]
    if: always()
    steps:
      - name: Generate security summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "Security scans completed on $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check job results
          if [ "${{ needs.cargo-audit.result }}" = "success" ]; then
            echo "- ✅ Cargo audit passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Cargo audit failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.npm-audit.result }}" = "success" ]; then
            echo "- ✅ NPM audit passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ NPM audit failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.secret-scan.result }}" = "success" ]; then
            echo "- ✅ Secret scan passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Secret scan failed" >> $GITHUB_STEP_SUMMARY
          fi
